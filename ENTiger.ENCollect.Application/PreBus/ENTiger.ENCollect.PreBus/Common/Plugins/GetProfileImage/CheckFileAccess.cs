// <auto-generated>
//     This code was generated by Sumeru FlexGen.
//     Template Version: TemplateVersion
//
//     Do not rename the file
//     TODO:
//     Implement your validations in the Validate(..) method.
// </auto-generated>

using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Logging;
using Sumeru.Flex;

namespace ENTiger.ENCollect.CommonModule.GetProfileImageCommonPlugins
{
    /// <summary>
    /// 
    /// </summary>
    public partial class CheckFileAccess : FlexiBusinessRuleBase, IFlexiBusinessRule<GetProfileImageDataPacket>
    {
        public override string Id { get; set; } = "3a1362c7914a81a86842f5e7fc412e06";
        public override string FriendlyName { get; set; } = "CheckFileAccess";

        protected readonly ILogger<CheckFileAccess> _logger;
        protected readonly IRepoFactory _repoFactory;
        protected FlexAppContextBridge? _flexAppContext;

        public CheckFileAccess(ILogger<CheckFileAccess> logger, IRepoFactory repoFactory)
        {
            _logger = logger;
            _repoFactory = repoFactory;
        }

        public virtual async Task Validate(GetProfileImageDataPacket packet)
        {
            if (!packet.HasError)
            {
                _repoFactory.Init(packet.Dto);
                _flexAppContext = packet.Dto.GetAppContext();

                string userId = _flexAppContext.UserId;

                var user = await _repoFactory.GetRepo().Find<ApplicationUser>(userId).FirstOrDefaultAsync();

                if (string.IsNullOrEmpty(user?.ProfileImage) || user.ProfileImage != packet.Dto.FileName)
                {
                    packet.AddError("Error", "Access Denied");
                }
            }
        }
    }
}
