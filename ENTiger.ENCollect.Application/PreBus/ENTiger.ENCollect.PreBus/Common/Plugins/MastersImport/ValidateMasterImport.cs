// <auto-generated>
//     This code was generated by Sumeru FlexGen.
//     Template Version: TemplateVersion
//
//     Do not rename the file
//     TODO:
//     Implement your validations in the Validate(..) method.
// </auto-generated>

using ENTiger.ENCollect.DomainModels.Utilities;
using Microsoft.Extensions.Logging;
using Sumeru.Flex;
using System.Threading.Tasks;
using ENTiger.ENCollect.DomainModels;
using ENTiger.ENCollect;
using Microsoft.Extensions.Options;
using System.IO.Abstractions;

namespace ENTiger.ENCollect.CommonModule.MastersImportCommonPlugins
{
    /// <summary>
    /// 
    /// </summary>
    public partial class ValidateMasterImport : FlexiBusinessRuleBase, IFlexiBusinessRule<MastersImportDataPacket>
    {
        public override string Id { get; set; } = "3a13b8847da1a549a419af8aa2c5a09a";
        public override string FriendlyName { get; set; } = "ValidateMasterImport";

        protected readonly ILogger<ValidateMasterImport> _logger;
        protected readonly IRepoFactory _repoFactory;
        private readonly IFileValidationUtility _fileValidationUtility;
        private readonly FilePathSettings _fileSettings;
        private readonly IFileSystem _fileSystem;
        public ValidateMasterImport(ILogger<ValidateMasterImport> logger, IRepoFactory repoFactory, IFileValidationUtility fileValidationUtility, IOptions<FilePathSettings> fileSettings, IFileSystem fileSystem)
        {
            _logger = logger;
            _repoFactory = repoFactory;
            _fileValidationUtility = fileValidationUtility;
            _fileSettings = fileSettings.Value;
            _fileSystem = fileSystem;
        }

        public virtual async Task Validate(MastersImportDataPacket packet)
        {
            //Uncomment the below line if validating against a db data using your repo
            //_repoFactory.Init(packet.Dto);

            //If any validation fails, uncomment and use the below line of code to add error to the packet
            //packet.AddError("Error", "ErrorMessage");

            _logger.LogDebug("ValidateMasterImportFFPlugin : Start");

            string _filepath = _fileSystem.Path.Combine(_fileSettings.BasePath, _fileSettings.IncomingPath);

            if (!_fileValidationUtility.CheckIfFileExists(_filepath, packet.Dto.FileName))
            {
                packet.AddError("Error", "File Not Found/Uploaded");
            }
            _logger.LogDebug("ValidateMasterImportFFPlugin : End");



            await Task.CompletedTask; //If you have any await in the validation, remove this line

        }

    }
}
