// <auto-generated>
//     This code was generated by Sumeru FlexGen.
//     Template Version: TemplateVersion
//
//     Do not rename the file
//     TODO:
//     Implement your validations in the Validate(..) method.
// </auto-generated>

using Microsoft.Extensions.Logging;
using ENCollect.Security;
using Sumeru.Flex;
using System.Text;
using System.Threading.Tasks;
using Microsoft.EntityFrameworkCore;

namespace ENTiger.ENCollect.ApplicationUsersModule.ChangePasswordApplicationUsersPlugins
{
    /// <summary>
    /// 
    /// </summary>
    public partial class ValidateUser : FlexiBusinessRuleBase, IFlexiBusinessRule<ChangePasswordDataPacket>
    {
        public override string Id { get; set; } = "3a1347a6ef21f4a9157bf48edae07b01";
        public override string FriendlyName { get; set; } = "ValidateUser";

        protected readonly ILogger<ValidateUser> _logger;
        protected readonly IRepoFactory _repoFactory;
        protected FlexAppContextBridge? _flexAppContext;
        public ValidateUser(ILogger<ValidateUser> logger, IRepoFactory repoFactory)
        {
            _logger = logger;
            _repoFactory = repoFactory;
        }

        public virtual async Task Validate(ChangePasswordDataPacket packet)
        {
            //Uncomment the below line if validating against a db data using your repo
            _repoFactory.Init(packet.Dto);
            _flexAppContext = packet.Dto.GetAppContext();
            string userId = _flexAppContext.UserId;

            if (!packet.HasError)
            {

                var user = await _repoFactory.GetRepo().FindAll<ApplicationUser>().Where(a => a.Id == userId).FirstOrDefaultAsync();
                if (user == null)
                {
                    packet.AddError("Error", "Invalid User");
                }
            }
        }
    }
}
