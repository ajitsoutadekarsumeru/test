// <auto-generated>
//     This code was generated by Sumeru FlexGen.
//     Template Version: TemplateVersion
//
//     Do not rename the file
//     TODO:
//     Implement your validations in the Validate(..) method.
// </auto-generated>

using Microsoft.Extensions.Logging;
using Sumeru.Flex;
using System.Threading.Tasks;

namespace ENTiger.ENCollect.ApplicationUsersModule.GetAzureApplicationUsersPlugins
{
    /// <summary>
    /// 
    /// </summary>
    public partial class ValidateTenant : FlexiBusinessRuleBase, IFlexiBusinessRule<GetAzureDataPacket>
    {
        public override string Id { get; set; } = "3a1347a9639e6369097d013b67b03363";
        public override string FriendlyName { get; set; } = "ValidateTenant";

        protected readonly ILogger<ValidateTenant> _logger;
        protected readonly IRepoFactory _repoFactory;

        public ValidateTenant(ILogger<ValidateTenant> logger, IRepoFactory repoFactory)
        {
            _logger = logger;
            _repoFactory = repoFactory;
        }

        public virtual async Task Validate(GetAzureDataPacket packet)
        {
            //Uncomment the below line if validating against a db data using your repo
            _repoFactory.Init(packet.Dto);

            //If any validation fails, uncomment and use the below line of code to add error to the packet
            //var tenants = _repoFactory.GetRepo().FindAllOFlex<TenantConfiguration>();
            //if (tenants == null)
            //{
            //    packet.AddError("Error", "Please configure the tenants");
            //}
            //var tenant = tenants.Where(x => x.Id == packet.TenantId).FirstOrDefault();
            //if (tenant == null)
            //{
            //    packet.AddError("Error", "Invalid Company");
            //}
            //else
            //{
            //    if (tenant.IsDeleted)
            //    {
            //        packet.AddError("Error", "Company Disabled. Please contact the administrator.");
            //    }
            //}

            await Task.CompletedTask; //If you have any await in the validation, remove this line
        }
    }
}
