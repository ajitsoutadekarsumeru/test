// <auto-generated>
//     This code was generated by Sumeru FlexGen.
//     Template Version: TemplateVersion
//
//     Do not rename the file
//     TODO:
//     Implement your validations in the Validate(..) method.
// </auto-generated>

using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Logging;
using Sumeru.Flex;
using System.Threading.Tasks;

namespace ENTiger.ENCollect.UserSearchCriteriaModule.AddUserSearchCriteriaPlugins
{
    /// <summary>
    /// 
    /// </summary>
    public partial class CheckDuplicate : FlexiBusinessRuleBase, IFlexiBusinessRule<AddDataPacket>
    {
        public override string Id { get; set; } = "3a135bb2397f7dd0363d6382feb781a5";
        public override string FriendlyName { get; set; } = "CheckDuplicate";

        protected readonly ILogger<CheckDuplicate> _logger;
        protected readonly IRepoFactory _repoFactory;

        public CheckDuplicate(ILogger<CheckDuplicate> logger, IRepoFactory repoFactory)
        {
            _logger = logger;
            _repoFactory = repoFactory;
        }

        public virtual async Task Validate(AddDataPacket packet)
        {
            _repoFactory.Init(packet.Dto);

            var result = await _repoFactory.GetRepo().FindAll<UserSearchCriteria>()
                                        .Where(p => p.filterName == packet.Dto.FilterName)
                                        .FirstOrDefaultAsync();
            if (result != null)
            {
                packet.AddError("Error", "Filter name already exists.");
            }
        }
    }
}
