// <auto-generated>
//     This code was generated by Sumeru FlexGen.
//     Template Version: TemplateVersion
//
//     Do not rename the file
//     TODO:
//     Implement your validations in the Validate(..) method.
// </auto-generated>

using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Logging;
using Sumeru.Flex;
using System.Threading.Tasks;

namespace ENTiger.ENCollect.PayInSlipsModule.CreatePayInSlipPayInSlipsPlugins
{
    /// <summary>
    /// 
    /// </summary>
    public partial class ValidatePayInSlip : FlexiBusinessRuleBase, IFlexiBusinessRule<CreatePayInSlipDataPacket>
    {
        public override string Id { get; set; } = "3a138651734e10a3496a772fd6a70c31";
        public override string FriendlyName { get; set; } = "ValidatePayInSlip";

        protected readonly ILogger<ValidatePayInSlip> _logger;
        protected readonly IRepoFactory _repoFactory;

        public ValidatePayInSlip(ILogger<ValidatePayInSlip> logger, IRepoFactory repoFactory)
        {
            _logger = logger;
            _repoFactory = repoFactory;
        }

        public virtual async Task Validate(CreatePayInSlipDataPacket packet)
        {
            //Uncomment the below line if validating against a db data using your repo
            _repoFactory.Init(packet.Dto);

            if (!string.IsNullOrEmpty(packet.Dto.CMSPayInSlipNo))
            {
                //If any validation fails, uncomment and use the below line of code to add error to the packet
                var payinslip = await _repoFactory.GetRepo().FindAll<PayInSlip>()
                                        .Where(x => x.CMSPayInSlipNo == packet.Dto.CMSPayInSlipNo)
                                        .FirstOrDefaultAsync();
                if (payinslip != null)
                {
                    packet.AddError("Error", "PayInSlip number already used");
                }
            }
        }
    }
}
