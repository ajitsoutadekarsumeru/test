// <auto-generated>
//     This code was generated by Sumeru FlexGen.
//     Template Version: TemplateVersion
//
//     Do not rename the file
//     TODO:
//     Implement your validations in the Validate(..) method.
// </auto-generated>

using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Logging;
using Sumeru.Flex;
using System.Threading.Tasks;

namespace ENTiger.ENCollect.SegmentationModule.AddSegmentSegmentationPlugins
{
    /// <summary>
    /// 
    /// </summary>
    public partial class ValidateSegment : FlexiBusinessRuleBase, IFlexiBusinessRule<AddSegmentDataPacket>
    {
        public override string Id { get; set; } = "3a145751eb12f132f0e58d520043b94d";
        public override string FriendlyName { get; set; } = "ValidateSegment";

        protected readonly ILogger<ValidateSegment> _logger;
        protected readonly IRepoFactory _repoFactory;

        public ValidateSegment(ILogger<ValidateSegment> logger, IRepoFactory repoFactory)
        {
            _logger = logger;
            _repoFactory = repoFactory;
        }

        public virtual async Task Validate(AddSegmentDataPacket packet)
        {
            _repoFactory.Init(packet.Dto);
            var segment = await _repoFactory.GetRepo().FindAll<Segmentation>()
                                        .Where(a => string.Equals(a.Name.Trim(), packet.Dto.Name) && a.IsDeleted == false)
                                        .FirstOrDefaultAsync();

            if (segment != null)
            {
                packet.AddError("Error", "Duplicate SegmentName " + segment.Name);
            }
        }
    }
}
