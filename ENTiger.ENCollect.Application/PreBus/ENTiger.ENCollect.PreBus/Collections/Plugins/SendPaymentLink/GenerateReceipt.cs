// <auto-generated>
//     This code was generated by Sumeru FlexGen.
//     Template Version: TemplateVersion
//
//     Do not rename the file
//     TODO:
//     Implement your validations in the Validate(..) method.
// </auto-generated>

using Microsoft.Extensions.Logging;
using Sumeru.Flex;
using System.Threading.Tasks;

namespace ENTiger.ENCollect.CollectionsModule.SendPaymentLinkCollectionsPlugins
{
    /// <summary>
    /// 
    /// </summary>
    public partial class GenerateReceipt : FlexiBusinessRuleBase, IFlexiBusinessRule<SendPaymentLinkDataPacket>
    {
        public override string Id { get; set; } = "3a138ee2b6136833d577efcafcbed8e7";
        public override string FriendlyName { get; set; } = "GenerateReceipt";

        protected readonly ILogger<GenerateReceipt> _logger;
        protected readonly IRepoFactory _repoFactory;
        protected readonly ICustomUtility _customUtility;
        public GenerateReceipt(ILogger<GenerateReceipt> logger, IRepoFactory repoFactory, ICustomUtility customUtility)
        {
            _logger = logger;
            _repoFactory = repoFactory;
            _customUtility = customUtility;
        }

        public virtual async Task Validate(SendPaymentLinkDataPacket packet)
        {
            //Uncomment the below line if validating against a db data using your repo
            //_repoFactory.Init(packet.Dto);

            //If any validation fails, uncomment and use the below line of code to add error to the packet
            if (!packet.HasError)
            {
                packet.ReceiptNo = await _customUtility.GetNextCustomIdAsync(packet.Dto.GetAppContext(), CustomIdEnum.EReceipt.Value);
            }
            await Task.CompletedTask; //If you have any await in the validation, remove this line
        }
    }
}
