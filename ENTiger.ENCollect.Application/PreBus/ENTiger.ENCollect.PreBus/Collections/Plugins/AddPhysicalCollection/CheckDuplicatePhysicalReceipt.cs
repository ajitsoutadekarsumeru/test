// <auto-generated>
//     This code was generated by Sumeru FlexGen.
//     Template Version: TemplateVersion
//
//     Do not rename the file
//     TODO:
//     Implement your validations in the Validate(..) method.
// </auto-generated>

using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Logging;
using Sumeru.Flex;
using System.Threading.Tasks;

namespace ENTiger.ENCollect.CollectionsModule.AddPhysicalCollectionCollectionsPlugins
{
    /// <summary>
    /// 
    /// </summary>
    public partial class CheckDuplicatePhysicalReceipt : FlexiBusinessRuleBase, IFlexiBusinessRule<AddPhysicalCollectionDataPacket>
    {
        public override string Id { get; set; } = "3a138e3f72a72d30ed1daf097f869192";
        public override string FriendlyName { get; set; } = "CheckDuplicatePhysicalReceipt";

        protected readonly ILogger<CheckDuplicatePhysicalReceipt> _logger;
        protected readonly IRepoFactory _repoFactory;

        public CheckDuplicatePhysicalReceipt(ILogger<CheckDuplicatePhysicalReceipt> logger, IRepoFactory repoFactory)
        {
            _logger = logger;
            _repoFactory = repoFactory;
        }

        public virtual async Task Validate(AddPhysicalCollectionDataPacket packet)
        {
            //Uncomment the below line if validating against a db data using your repo
            _repoFactory.Init(packet.Dto);
            string physicalReceiptNo = packet.Dto.PhysicalReceiptNumber;

            //If any validation fails, uncomment and use the below line of code to add error to the packet
            var Collection = await _repoFactory.GetRepo().FindAll<Collection>()
                                        .Where(i => i.PhysicalReceiptNumber == physicalReceiptNo)
                                        .FirstOrDefaultAsync();
            if (Collection != null)
            {
                packet.AddError("Error", "Duplicate Receipt No " + physicalReceiptNo);
            }
        }
    }
}
