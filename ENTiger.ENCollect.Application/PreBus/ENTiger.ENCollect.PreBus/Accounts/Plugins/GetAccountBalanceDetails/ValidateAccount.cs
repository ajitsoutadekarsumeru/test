// <auto-generated>
//     This code was generated by Sumeru FlexGen.
//     Template Version: TemplateVersion
//
//     Do not rename the file
//     TODO:
//     Implement your validations in the Validate(..) method.
// </auto-generated>

using ENCollect.Security;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Logging;
using Sumeru.Flex;
using System.Text;

namespace ENTiger.ENCollect.AccountsModule.GetAccountBalanceDetailsAccountsPlugins
{
    /// <summary>
    /// 
    /// </summary>
    public partial class ValidateAccount : FlexiBusinessRuleBase, IFlexiBusinessRule<GetAccountBalanceDetailsDataPacket>
    {
        public override string Id { get; set; } = "3a151b4824dcc7cc759ab6646cc97214";
        public override string FriendlyName { get; set; } = "ValidateAccount";

        protected readonly ILogger<ValidateAccount> _logger;
        protected readonly IRepoFactory _repoFactory;

        public ValidateAccount(ILogger<ValidateAccount> logger, IRepoFactory repoFactory)
        {
            _logger = logger;
            _repoFactory = repoFactory;
        }

        public virtual async Task Validate(GetAccountBalanceDetailsDataPacket packet)
        {
            _repoFactory.Init(packet.Dto);
            AesGcmCrypto aesGcmCrypto = new AesGcmCrypto();
            var result = await _repoFactory.GetRepo().Find<UserLoginKeys>(packet.Dto.Referenceid).FirstOrDefaultAsync();

            string key = result != null ? result.Key : "";

            var aesgcmkey = Encoding.UTF8.GetBytes(key);
            packet.Dto.AccountNumber = aesGcmCrypto.Decrypt(packet.Dto.AccountNumber, aesgcmkey);
                
             
            string accountNo = packet.Dto.AccountNumber;

            LoanAccount account = await _repoFactory.GetRepo().FindAll<LoanAccount>().Where(i => i.AGREEMENTID == accountNo || i.CustomId == accountNo).FirstOrDefaultAsync();

            if (account == null)
            {
                packet.AddError("Error", "Invalid Account " + accountNo);
            }
        }

    }
}
