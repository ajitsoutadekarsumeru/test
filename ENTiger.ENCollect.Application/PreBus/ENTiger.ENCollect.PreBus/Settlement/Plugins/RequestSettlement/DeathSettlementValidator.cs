// <auto-generated>
//     This code was generated by Sumeru FlexGen.
//     Template Version: TemplateVersion
//
//     Do not rename the file
//     TODO:
//     Implement your validations in the Validate(..) method.
// </auto-generated>

using Microsoft.Extensions.Logging;
using Sumeru.Flex;
using System.Threading.Tasks;

namespace ENTiger.ENCollect.SettlementModule.RequestSettlementSettlementPlugins
{
    /// <summary>
    /// 
    /// </summary>
    public partial class DeathSettlementValidator : FlexiBusinessRuleBase, IFlexiBusinessRule<RequestSettlementDataPacket>
    {
        public override string Id { get; set; } = "3a1950576d2cc6a68e2b5b8938d19b69";
        public override string FriendlyName { get; set; } = "DeathSettlementValidator";

        protected readonly ILogger<DeathSettlementValidator> _logger;
        protected readonly RepoFactory _repoFactory;

        public DeathSettlementValidator(ILogger<DeathSettlementValidator> logger, RepoFactory repoFactory)
        {
            _logger = logger;
            _repoFactory = repoFactory;
        }

        public virtual async Task Validate(RequestSettlementDataPacket packet)
        {
            _repoFactory.Init(packet.Dto);
            bool isDeathSettlement = packet.Dto.IsDeathSettlement;
            if (isDeathSettlement)
            {
                //check in dto.documents if documentType == "DeathCertificate" is there
                var deathCertificate = packet.Dto.Documents.FirstOrDefault(d => d.DocumentType.ToLower() == "deathcertificate");
                if (deathCertificate == null)
                {
                    packet.AddError("Documents", "Death Certificate is mandatory for death settlement.");
                }
            }

            //If any validation fails, uncomment and use the below line of code to add error to the packet
            //packet.AddError("key", "ErrorMessage");


            await Task.CompletedTask; //If you have any await in the validation, remove this line

        }

    }
}
